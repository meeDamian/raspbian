name: Create new Release

# Run on a push to master, and everyday at 4:20
on:
  push:
    branches: [ 'master' ]
  schedule:
    - cron: '20 4 * * *'

jobs:
  check:
    name: Check new Raspbian Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check
        env:
          ALL_OWN_RELEASES: https://api.github.com/repos/${{ github.repository }}/releases
        run: |
          VERSION="$(./modify-image.sh version)"

          TAGS="$(wget -qO- "$ALL_OWN_RELEASES" | jq -r '.[].tag_name')"
          if [ -n "$TAGS" ] && echo "$TAGS" | grep "$VERSION"; then
            echo "Nothing to do. Exiting."
            exit 0
          fi
          echo ::set-env name=VERSION::"$VERSION"


      - name: Build Docker image
        if: env.VERSION != ''
        run: docker build -t builder .

      - name: Modify Raspbian image
        if: env.VERSION != ''
        run: |
          mkdir images/
          docker run --rm --privileged -v="$(pwd)/images/:/raspbian/" builder

          echo ::set-env name=FILE::"$(cd images && ls *-firstboot.zip)"

      - name: Create Github Release
        uses: meeDamian/github-release@2.0
        if: env.VERSION != '' && env.FILE != ''
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.VERSION }}
          name: ${{ env.FILE }}
          prerelease: true
          allow_override: false
          gzip: false
          files: >
            images/${{ env.FILE }}
            images/${{ env.FILE }}.sha256
          body: >
            This Release adds [`firstboot.sh`](/firstboot.sh) capabilities to
            the original Raspbian image [${{ env.FILE }}](${{ env.URL }}).

      - name: Comment
        if: steps.release.outputs.release_id != ''
        env:
          URL: https://api.github.com/repos/${{ github.repository }}/issues
          body: >
            New Raspbian Lite release detected.  It has been modified with `firstboot.service`, and pre-released as https://github.com/${{ github.repository }}/releases/tag/${{ env.VERSION }}.

            Please verify, [everything checks out](https://github.com/${{ github.repository }}/runs/${{ github.run_id }}?check_suite_focus=true), and upgrade `Pre-release` to `Release`.
        run: |
          jq -nc \
            --arg title "$VERSION released" \
            --arg body "$body" \
            --argjson assignees '["meeDamian"]' \
            --argjson labels '["release-pending-approval"]' \
            '{$title, $body, $assignees, $labels}' \
          | curl -d @- \
            -X "POST" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "$URL" \
          | jq '.'
